{"version":3,"sources":["file:///Users/vladislavkvinto/FlappyBat/assets/scripts/GameManager.ts"],"names":["_decorator","Component","Node","input","Input","RigidBody2D","Vec2","Prefab","director","instantiate","Collider2D","Contact2DType","Label","ccclass","property","GameManager","isGameStarted","score","start","on","EventType","TOUCH_START","jump","player","getComponent","BEGIN_CONTACT","onBeginContact","END_CONTACT","endContact","selfCollider","otherCollider","node","name","failureWindow","active","unscheduleAllCallbacks","getScene","getChildByName","children","forEach","value","linearVelocity","scoreLabel","string","body","applyLinearImpulseToCenter","schedule","genetateObstacles","canvas","speed","yRandom","Math","random","floor","topObstacle","setParent","setPosition","setSiblingIndex","bottomObstacle","sensor","destroy","update","deltaTime"],"mappings":"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","sourcesContent":["import {\n    _decorator, Component, Node, input, Input, RigidBody2D, Vec2, Prefab, director, instantiate,\n    Collider2D, Contact2DType, Label\n} from 'cc';\n\nconst {ccclass, property} = _decorator;\n\n@ccclass('G')\nexport class GameManager extends Component {\n\n    @property(Node)\n    player: Node;\n\n    @property(Node)\n    failureWindow: Node;\n\n    @property(Prefab)\n    topObstacle: Prefab;\n\n    @property(Prefab)\n    bottomObstacle: Prefab;\n\n    @property(Prefab)\n    sensor: Prefab;\n\n    @property(Label)\n    scoreLabel: Label;\n\n    isGameStarted = false;\n\n    score = 0;\n\n\n    start() {\n        input.on(Input.EventType.TOUCH_START, this.jump, this);\n        this.player.getComponent(Collider2D).on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n        this.player.getComponent(Collider2D).on(Contact2DType.END_CONTACT, this.endContact, this);\n\n    }\n\n    private onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D) {\n        if (otherCollider.node.name !== \"Sensor\") {\n            this.failureWindow.active = true;\n            this.unscheduleAllCallbacks();\n            director.getScene().getChildByName(\"Canvas\").children.forEach(value => {\n                if (value.name === \"TopObstacle\" || value.name === \"Sensor\" || value.name === \"BottomObstacle\" ){\n                    value.getComponent(RigidBody2D).linearVelocity = new Vec2(0, 0);\n                }\n            })\n        }\n    }\n\n    private endContact(selfCollider: Collider2D, otherCollider: Collider2D) {\n        if (otherCollider.node.name === \"Sensor\") {\n            this.score += 1;\n            this.scoreLabel.string = `Score: ${this.score}`;\n        }\n    }\n\n    private jump() {\n        let body = this.player.getComponent(RigidBody2D);\n        body.linearVelocity = new Vec2(0, 0);\n\n        body.applyLinearImpulseToCenter(new Vec2(0, 700), true)\n\n        if (!this.isGameStarted) {\n            this.schedule(() => this.genetateObstacles(), 0.8);\n            this.isGameStarted = true;\n        }\n\n    }\n\n    private genetateObstacles() {\n        let canvas = director.getScene().getChildByName(\"Canvas\");\n\n        let speed = 25;\n\n        let yRandom = (Math.random() > 0.5 ? 1 : -1) * Math.floor(Math.random() * 300);\n\n        let topObstacle = instantiate(this.topObstacle);\n        topObstacle.setParent(canvas);\n        topObstacle.setPosition(550, 750 + yRandom);\n        topObstacle.setSiblingIndex(3)\n        topObstacle.getComponent(RigidBody2D).linearVelocity = new Vec2(-speed, 0);\n\n        let bottomObstacle = instantiate(this.bottomObstacle);\n        bottomObstacle.setParent(canvas);\n        bottomObstacle.setPosition(550, -750 + yRandom);\n        bottomObstacle.setSiblingIndex(3)\n        bottomObstacle.getComponent(RigidBody2D).linearVelocity = new Vec2(-speed, 0);\n\n        let sensor = instantiate(this.sensor);\n        sensor.setParent(canvas);\n        sensor.setPosition(550, yRandom);\n        sensor.setSiblingIndex(3)\n        sensor.getComponent(RigidBody2D).linearVelocity = new Vec2(-speed, 0);\n\n\n        this.schedule(() => {\n            topObstacle.destroy();\n            bottomObstacle.destroy();\n            sensor.destroy();\n        }, 2);\n    }\n\n    update(deltaTime: number) {\n\n    }\n}\n\n"]}